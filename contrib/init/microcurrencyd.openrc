#!/sbin/openrc-run

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/microcurrency/.microcurrency" ]; then
	MICROCURRENCYD_DEFAULT_DATADIR="/var/lib/microcurrency/.microcurrency"
else
	MICROCURRENCYD_DEFAULT_DATADIR="/var/lib/microcurrencyd"
fi

MICROCURRENCYD_CONFIGFILE=${MICROCURRENCYD_CONFIGFILE:-/etc/satoshiware/microcurrency.conf}
MICROCURRENCYD_PIDDIR=${MICROCURRENCYD_PIDDIR:-/var/run/microcurrencyd}
MICROCURRENCYD_PIDFILE=${MICROCURRENCYD_PIDFILE:-${MICROCURRENCYD_PIDDIR}/microcurrencyd.pid}
MICROCURRENCYD_DATADIR=${MICROCURRENCYD_DATADIR:-${MICROCURRENCYD_DEFAULT_DATADIR}}
MICROCURRENCYD_USER=${MICROCURRENCYD_USER:-${MICROCURRENCY_USER:-microcurrency}}
MICROCURRENCYD_GROUP=${MICROCURRENCYD_GROUP:-microcurrency}
MICROCURRENCYD_BIN=${MICROCURRENCYD_BIN:-/usr/bin/microcurrencyd}
MICROCURRENCYD_NICE=${MICROCURRENCYD_NICE:-${NICELEVEL:-0}}
MICROCURRENCYD_OPTS="${MICROCURRENCYD_OPTS:-${MICROCURRENCY_OPTS}}"

name="Microcurrency Core Daemon"
description="Microcurrency cryptocurrency P2P network daemon"

command="/usr/bin/microcurrencyd"
command_args="-pid=\"${MICROCURRENCYD_PIDFILE}\" \
		-conf=\"${MICROCURRENCYD_CONFIGFILE}\" \
		-datadir=\"${MICROCURRENCYD_DATADIR}\" \
		-daemon \
		${MICROCURRENCYD_OPTS}"

required_files="${MICROCURRENCYD_CONFIGFILE}"
start_stop_daemon_args="-u ${MICROCURRENCYD_USER} \
			-N ${MICROCURRENCYD_NICE} -w 2000"
pidfile="${MICROCURRENCYD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${MICROCURRENCYD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${MICROCURRENCYD_USER}:${MICROCURRENCYD_GROUP}" \
	"${MICROCURRENCYD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${MICROCURRENCYD_USER}:${MICROCURRENCYD_GROUP}" \
	"${MICROCURRENCYD_PIDDIR}"

	checkpath -f \
	-o "${MICROCURRENCYD_USER}:${MICROCURRENCYD_GROUP}" \
	-m 0660 \
	"${MICROCURRENCYD_CONFIGFILE}"

	checkconfig || return 1
}

checkconfig()
{
	if grep -qs '^rpcuser=' "${MICROCURRENCYD_CONFIGFILE}" && \
		! grep -qs '^rpcpassword=' "${MICROCURRENCYD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run microcurrencyd."
		eerror "The setting must appear in ${MICROCURRENCYD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"Microcurrency Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
